# ---- libreries ----
library(ggplot2)
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
var_e <- runif(n, 2, 20) # error variance
e <- rnorm(n, 0, var_e) # error term
x <- rnorm(n, 100, 25) # valores de x
y <- b1 + b2*x + e
df <- as.data.frame(x, y)
View(df)
df <- as.data.frame(c(x, y))
df <- as.data.frame(x, y)
df <- data.frame(x, y)
ggplot(x, aes(x,y)) +
geom_point() +
geom_smooth()
ggplot(df, aes(x,y)) +
geom_point() +
geom_smooth()
ggplot(df, aes(x,y)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm")
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
# ---- simulation -----
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
# ---- simulation -----
set.seed(1234)
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
x <- rnorm(n, 100, 25) # values of x
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
x <- rnorm(n, 100, 25) # values of x
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n) # values of x
x <- rnorm(n) # values of x
x <- rnorm(n) # values of x
x <- rnorm(n) # values of x
# ---- simulation -----
set.seed(1234)
x <- rnorm(n) # values of x
x <- rnorm(n) # values of x
# ---- simulation -----
set.seed(1234)
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
x <- rnorm(n, 100, 25) # values of x
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
b1 <- 20 # known intercept
b2 <- 0.6 # known slope
n <- 25 # sample size
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
var_e <- runif(n, 2, 20) # error variance
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
var_e <- runif(1, 2, 20) # error variance
set.seed(1234)
x <- rnorm(n, 100, 25) # values of x
var_e <- runif(1, 2, 20) # error variance
e <- rnorm(n, 0, var_e) # error term
y <- b1 + b2*x + e # linear model
# ---- OLS estimation ----
lm(y ~ x)
ggplot(df, aes(x,y)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm")
# ---- libreries ----
library(ggplot2)
df <- data.frame(x, y)
View(df)
ggplot(df, aes(x,y)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm")
seq(1:99)
# ---- OLS estimation ----
lm(y ~ x)
x
x[1]
x[2]
lm(y~x)
lm(y~x)[1]
lm(y~x)[1][1]
lm(y~x)[1][2]
lm(y~x)[1][[1]]
lm(y~x)[1][[2]]
model <- lm(y~x)
model$coefficients
model$coefficients[1]
model$coefficients
model$coefficients[1]
model$coefficients[2]
# ---- simulation ----
b_vector <- c()
# ---- simulation ----
b_vector <- c(2,4,6,7)
# ---- simulation ----
b_vector <- c()
# ---- simulation ----
b1_vector <- c()
b2_vector <- c()
# ---- OLS estimation ----
lm(y ~ x)
# ---- OLS estimation ----
model <- lm(y ~ x)
# ---- OLS estimation ----
model <- lm(y ~ x)
b1_0 <- model$coefficients[1]
b2_0 <- model$coefficients[2]
for (seed in seq(1:99)) {
set.seed(seed)
x <- rnorm(n, 100, 25) # values of x
var_e <- runif(1, 2, 20) # error variance
e <- rnorm(n, 0, var_e) # error term
y <- b1 + b2*x + e # linear model
model <- lm(y ~ x) # regression
b1_hat <- model$coefficients[1] # estimated intercept
b2_hat <- model$coefficients[2] # estimated slope
b1_vector <- c(b1_0, b1_hat)
b2_vector <- c(b2_0, b2_hat)
}
b1_vector <- b1_0
b2_vector <- b2_0
b1_vector <- b1_0
b2_vector <- b2_0
for (seed in seq(1:99)) {
set.seed(seed)
x <- rnorm(n, 100, 25) # values of x
var_e <- runif(1, 2, 20) # error variance
e <- rnorm(n, 0, var_e) # error term
y <- b1 + b2*x + e # linear model
model <- lm(y ~ x) # regression
b1_hat <- model$coefficients[1] # estimated intercept
b2_hat <- model$coefficients[2] # estimated slope
b1_vector <- c(b1_vector, b1_hat)
b2_vector <- c(b2_vector, b2_hat)
}
df_beta <- data.frame(b1_vector, b2_vector)
View(df_beta)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram()
ggplot(df_beta, aes(b2_vector)) +
geom_histogram()
ggplot(df_beta)
View(df)
ggplot(df, aes(x, y))
ggplot(df, aes(x,y)) +
geom_point()
ggplot(df, aes(x,y)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(df_beta, aes(b1_vector)) +
geom_histogram()
ggplot(df_beta, aes(b2_vector)) +
geom_histogram()
mean(b1_vector)
mean(b2_vector)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram() +
geom_density()
ggplot(df_beta, aes(b2_vector)) +
geom_histogram()
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(aes(y = stat(count) / sum(count)), bins = 8) +
geom_density()
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(aes(y = stat(count) / sum(count)), bins = 8) +
geom_density(aes(aes(y = stat(count) / sum(count)), bins = 8))
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(aes(y = stat(count) / sum(count)), bins = 8) +
geom_density(aes(aes(y = stat(count) / sum(count))))
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(aes(y = stat(count) / sum(count)), bins = 8) +
geom_density(aes(y = stat(count) / sum(count))))
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(aes(y = stat(count) / sum(count)), bins = 8) +
geom_density(aes(y = stat(count) / sum(count)))
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 0.1) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 0.1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 0.1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = mean(b2_vector),
sd = sd(b2_vector)) * n * 1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 0.1) +
stat_function(fun = function(x) dnorm(x, mean = mean(b2_vector),
sd = sd(b2_vector)) * n * 0.1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = function(x) dnorm(x, mean = mean(b2_vector),
sd = sd(b2_vector)) * n * 0.01,
color = "darkred", size = 1)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = function(x) dnorm(x, mean = mean(b2_vector),
sd = sd(b2_vector)) * n * 0.01,
color = "darkred", size = 1)
# ---- simulation ----
b1_vector <- b1_0
b2_vector <- b2_0
for (seed in seq(1:1000)) {
set.seed(seed)
x <- rnorm(n, 100, 25) # values of x
var_e <- runif(1, 2, 20) # error variance
e <- rnorm(n, 0, var_e) # error term
y <- b1 + b2*x + e # linear model
model <- lm(y ~ x) # regression
b1_hat <- model$coefficients[1] # estimated intercept
b2_hat <- model$coefficients[2] # estimated slope
b1_vector <- c(b1_vector, b1_hat)
b2_vector <- c(b2_vector, b2_hat)
}
df_beta <- data.frame(b1_vector, b2_vector)
mean(b1_vector)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1, aes(y=count/sum(count))) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 0.01)
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 0.01) +
geom_density()
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
stat_function(fun = function(x) dnorm(x, mean = mean(b1_vector),
sd = sd(b1_vector)) * n * 1,
color = "darkred", size = 1)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
geom_density()
# ---- simulation ----
b1_vector <- b1_0
b2_vector <- b2_0
for (seed in seq(1:99)) {
set.seed(seed)
x <- rnorm(n, 100, 25) # values of x
var_e <- runif(1, 2, 20) # error variance
e <- rnorm(n, 0, var_e) # error term
y <- b1 + b2*x + e # linear model
model <- lm(y ~ x) # regression
b1_hat <- model$coefficients[1] # estimated intercept
b2_hat <- model$coefficients[2] # estimated slope
b1_vector <- c(b1_vector, b1_hat)
b2_vector <- c(b2_vector, b2_hat)
}
df_beta <- data.frame(b1_vector, b2_vector)
mean(b1_vector)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
geom_density()
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(df_beta$b1_vector),
sd = sd(df_beta$b2_vector)))
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(df_beta$b1_vector),
sd = sd(df_beta$b1_vector)))
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(df_beta$b2_vector),
sd = sd(df_beta$b2_vector)))
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 0.01, aes(y=..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(df_beta$b2_vector),
sd = sd(df_beta$b2_vector)))
b1_vector <- b1_0
b2_vector <- b2_0
for (seed in seq(1:1999)) {
set.seed(seed)
x <- rnorm(n, 100, 25) # values of x
var_e <- runif(1, 2, 20) # error variance
e <- rnorm(n, 0, var_e) # error term
y <- b1 + b2*x + e # linear model
model <- lm(y ~ x) # regression
b1_hat <- model$coefficients[1] # estimated intercept
b2_hat <- model$coefficients[2] # estimated slope
b1_vector <- c(b1_vector, b1_hat)
b2_vector <- c(b2_vector, b2_hat)
}
df_beta <- data.frame(b1_vector, b2_vector)
View(df_beta)
mean(b1_vector)
mean(b1_vector)
mean(b2_vector)
ggplot(df_beta, aes(b1_vector)) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(df_beta$b1_vector),
sd = sd(df_beta$b1_vector)))
ggplot(df_beta, aes(b2_vector)) +
geom_histogram(binwidth = 0.01, aes(y=..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(df_beta$b2_vector),
sd = sd(df_beta$b2_vector)))
